// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email       String       @unique
  password    String
  firstName   String       @map("first_name")
  lastName    String       @map("last_name")
  photo       String?
  work        String?
  location    String?
  description String?
  links       SocialLinks?
  todos       Todo[]

  @@map("user")
}

model Todo {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  description String?
  status      Boolean? @default(false)
  sticker     String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@map("todo")
}

model SocialLinks {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  instagram String?
  facebook  String?
  github    String?
  linkedIn  String? @map("linked_in")

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  @@map("social_links")
}

model Page {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name    String @unique
  content String @db.Text

  @@map("page")
}
